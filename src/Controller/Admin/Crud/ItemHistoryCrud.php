<?php

namespace App\Controller\Admin\Crud;

use App\Controller\Admin\Field\EntityField;
use App\Entity\Item;
use App\Entity\ItemHistory;
use App\Enum\PaymentStatusEnum;
use App\Enum\PaymentTypeEnum;
use EasyCorp\Bundle\EasyAdminBundle\Config\Action;
use EasyCorp\Bundle\EasyAdminBundle\Config\Actions;
use EasyCorp\Bundle\EasyAdminBundle\Config\Crud;
use EasyCorp\Bundle\EasyAdminBundle\Context\AdminContext;
use EasyCorp\Bundle\EasyAdminBundle\Controller\AbstractCrudController;
use EasyCorp\Bundle\EasyAdminBundle\Field\ChoiceField;
use EasyCorp\Bundle\EasyAdminBundle\Field\DateTimeField;
use EasyCorp\Bundle\EasyAdminBundle\Field\EmailField;
use EasyCorp\Bundle\EasyAdminBundle\Field\NumberField;

class ItemHistoryCrud extends AbstractCrudController
{
    public static function getEntityFqcn(): string
    {
        return ItemHistory::class;
    }

    public function index(AdminContext $context)
    {
        return parent::index($context); // TODO: Change the autogenerated stub
    }

    public function configureActions(Actions $actions): Actions
    {
        return $actions
            ->remove(Crud::PAGE_INDEX, Action::NEW)
            ->remove(Crud::PAGE_INDEX, Action::DELETE);
    }

    public function configureFields(string $pageName): iterable
    {
        return [
            NumberField::new('paymentId'),
            ChoiceField::new('step')
                ->setChoices(PaymentStatusEnum::toArray()),
            ChoiceField::new('type')
                ->setChoices(PaymentTypeEnum::toArray() + ['VOUCHER' => 'voucher']),
            EmailField::new('email'),
            EntityField::new('item')
                ->setClass(Item::class, 'name'),
            DateTimeField::new('date'),
        ];
    }
}